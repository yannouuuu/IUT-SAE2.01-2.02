@startuml SAE_UML_Version2
!theme vibrant
skinparam classAttributeIconSize 0

left to right direction

together {
  class Adolescent {
    - lastName: String
    - firstName: String
    - countryOfOrigin: String
    - criteria: Map<Criteres, String>
    - dateOfBirth: LocalDate
    --
    + addCriterion(criterion: Criteres, value: String, isHost: boolean): void
    + toString(): String
    + isCompatible(other: Adolescent): boolean
    + isFrenchCompatible(other: Adolescent): boolean
    + isHistoryCompatible(other: Adolescent): boolean
    + animalScore(other: Adolescent): int
    + dietScore(other: Adolescent): int
    + calculateAffinity(other: Adolescent): int
    + calculateAgeDifference(other: Adolescent): double
  }

  enum Criteres {
    GUEST_ANIMAL_ALLERGY
    HOST_HAS_ANIMAL
    GUEST_FOOD
    HOST_FOOD
    HOBBIES
    GENDER
    PAIR_GENDER
    HISTORY
    --
    + isValid(valeur: String): boolean
  }
}

together {
  class Affectation {
    - hosts: List<Adolescent>
    - visitors: List<Adolescent>
    - pairs: Map<Adolescent, Adolescent>
    --
    + calculatePairing(): Map<Adolescent, Adolescent>
  }

  class Main {
    --
    + loadInitialData(): void
    + launchAssignment(): void
    + displayResults(assignment: Affectation): void
  }
}

Adolescent --> Criteres : utilise
Affectation *-- Adolescent : contient
Main ..> Affectation : cr√©e et utilise

@enduml 